Q) Scopes in Servlets?

We have following three scopes in servlets.

1)request scope

2)session scope 

3)application scope 



Q) How can we enable <load-on-startup> and what happens if we enable <load-on-startup> ?

We need to enable <load-on-startup> inside web.xml file.

ex:
	web.xml 
	------
	<web-app>
		<servlet>
			<servlet-name>TestSrv</servlet-name>
			<servlet-class>com.ihub.www.TestSrv</servlet-class>
			<load-on-startup>1</load-on-startup>
		</servlet>
		<servlet-mapping>
			<servlet-name>TestSrv</servlet-name>
			<url-pattern>/test</url-pattern>
		</servlet-mapping>	

	</web-app>

If we enable <load-on-startup> then our servlet container will create servlet object during the server startup or during the deployment of web application.

Stateless Behaviour Of Web Application
======================================
Diagram: servlet8.1

Above diagram demostrate stateless behaviour of web application.

In stateless web application no web resource programs can access previous request data while processing the current request.

Our HTTP protocol is stateless which makes our web application also stateless.

To overcome this limitation we need to use Session Tracking.


Deployment Directory structure
--------------------------------
StatelessApp
|
|---Java Resources
	|
	|-----src
		|
		|---com.ihub.www
			|
			|---TestSrv1.java
			|---TestSrv2.java
			
|---Web Content
	|
	|-----form.html
	|
	|-----WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
--------

<form action="test1">
	
	Name: <input type="text" name="t1"/> <br>
	
	Father Name : <input type="text" name="t2"/> <br>
	
	Maritial Status: 
	<input type="checkbox" name="t3" value="married"/> MARRIED
	<input type="checkbox" name="t3" value="single"/> SINGLE  <br>
	
	<input type="submit" value="submit"/>
	
</form>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  	<servlet>
  		<servlet-name>TestSrv1</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  		<load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>TestSrv1</servlet-name>
  		<url-pattern>/test1</url-pattern>
  	</servlet-mapping>
  	
  	<servlet>
  		<servlet-name>TestSrv2</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  		<load-on-startup>2</load-on-startup>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>TestSrv2</servlet-name>
  		<url-pattern>/test2</url-pattern>
  	</servlet-mapping>
  	
  	<welcome-file-list>
  		<welcome-file>form.html</welcome-file>
  	</welcome-file-list>
  
</web-app>

TestSrv1.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv1 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2'>");
			pw.println("Spouse Name : <input type='text' name='f2t1'/> <br>");
			pw.println("No of Child : <input type='text' name='f2t2'/> <br> ");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2'>");
			pw.println("When will u marry : <input type='text' name='f2t1'/> <br>");
			pw.println("Why will u marry : <input type='text' name='f2t2'/> <br> ");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
	}
}

TestSrv2.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form 1 data
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		//reading form 2 data
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
		
		pw.println("Form 1 Data :"+name+" "+fname+" "+ms+"<br>");
		pw.println("Form 2 Data :"+val1+" "+val2+"<br>");
		
		pw.close();
	}
}

Request url
----------
	http://localhost:2525/StatelessApp/

Session
========
The process of continue and related operations perform on a web application with multiple request and response is called session.
ex:
	starting of java class and ending of java class is one session.
	login to gmail and logout from gmail is one session.

Session Tracking / Session Management
=====================================
Session tracking makes our web application as statefull web application even though our HTTP protocol is stateless.

In Stateless web application, no web resource programs can access previous request data 
while processing the current request during a session.

In statefull web application, all web resource programs can access previous request data 
while processing the current request during a session.

There are four techniques to perform session tracking.

1) Using hidden box fields

2) HttpCookies 

3) HttpSession with Cookies 

4) URL Rewriting 


3) HttpSession
---------------
HttpSession is an interface which is present in javax.servlet package.

HttpSession will generate a unique session ID for every request to identify that user is a existing user or new user.

Diagram: servlet8.2		

We can create HttpSession object as follow.
ex:
	HttpSession session=req.getSession();
	or
	HttpSession session=req.getSession(true);

HttpSession object is used to perform following things.

1) Bind the objects 

2) It will manipulate the data present in HttpSession/



Deployment Directory structure
--------------------------------
SessionApp
|
|---Java Resources
	|
	|-----src
		|
		|---com.ihub.www
			|
			|---TestSrv1.java
			|---TestSrv2.java
			
|---Web Content
	|
	|-----form.html
	|
	|-----WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
--------

<form action="test1">
	
	Name: <input type="text" name="t1"/> <br>
	
	Father Name : <input type="text" name="t2"/> <br>
	
	Maritial Status: 
	<input type="checkbox" name="t3" value="married"/> MARRIED
	<input type="checkbox" name="t3" value="single"/> SINGLE  <br>
	
	<input type="submit" value="submit"/>
	
</form>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  	<servlet>
  		<servlet-name>TestSrv1</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  		<load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>TestSrv1</servlet-name>
  		<url-pattern>/test1</url-pattern>
  	</servlet-mapping>
  	
  	<servlet>
  		<servlet-name>TestSrv2</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  		<load-on-startup>2</load-on-startup>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>TestSrv2</servlet-name>
  		<url-pattern>/test2</url-pattern>
  	</servlet-mapping>
  	
  	<welcome-file-list>
  		<welcome-file>form.html</welcome-file>
  	</welcome-file-list>
  
</web-app>

TestSrv1.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv1 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");

		HttpSession session=req.getSession(true);
		session.setAttribute("pname", name);
		session.setAttribute("pfname", fname);
		session.setAttribute("pms", ms);
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2'>");
			pw.println("Spouse Name : <input type='text' name='f2t1'/> <br>");
			pw.println("No of Child : <input type='text' name='f2t2'/> <br> ");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2'>");
			pw.println("When will u marry : <input type='text' name='f2t1'/> <br>");
			pw.println("Why will u marry : <input type='text' name='f2t2'/> <br> ");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
	}
}

TestSrv2.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form 1 data from HttpSession
		HttpSession session=req.getSession(false);
		String name=(String)session.getAttribute("pname");
		String fname=(String)session.getAttribute("pfname");
		String ms=(String)session.getAttribute("pms");
		
		
		//reading form 2 data
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
		
		pw.println("Form 1 Data :"+name+" "+fname+" "+ms+"<br>");
		pw.println("Form 2 Data :"+val1+" "+val2+"<br>");
		
		pw.close();
	}
}

Request url
----------
	http://localhost:2525/SessionApp/


































































































