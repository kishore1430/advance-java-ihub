Core java program
-----------------
class Test  
{
	//static block
	static
	{
		System.out.println("static-block");
	}
	//instance block
	{
		System.out.println("instance block");
	}
	public static void main(String[] args)throws Exception 
	{
		Class.forName("Test");	
	}
}




To use any JDBC Driver we need to register with DriverManager service.

Every JDBC application contains one built in service called DriverManager service.


Class.forName()
===============
Always prefer Class.forName() to register JDBC driver with DriverManager service.

It is used to load driver class but it won't create an object.

ex:
	Class.forName("driver classname");


Connection object
=================
Connection is an interface which is present in java.sql package.

It is an object of underlying supplied java class which implements java.sql.Connection(I).

To perform any operation in a database we need to establish the connection.

Once the work with database is completed we will close the connection.

ex:
	Connection con;


DriverManager.getConnection()
=============================
DriverManager is a class which is present in java.sql package.

A DriverManager.getConnection() method is used to interact with database and return one reusable JDBC connection object.

ex:	
	Connection con=DriverManager.getConnection(url);


Statement object
=================
Statement is an interface which is present in java.sql package.

It acts like a vehicle between java application and database software.

It is used sends and executes SQL Query in database software.

We can create Statement object as follow.

ex:
	Statement st=con.createStatement();


ResultSet object
================
ResultSet is an interface which is present in java.sql package.

Every ResultSet contains two positions.

1) BFR (Before First Record/Row)

2) ALR (After Last Record/Row)

By default record pointer points to BFR position.

Diagram: jdbc2.1

Every record ResultSet having 1 as base index and every column of ResultSet having 1 as base index.


rs.next()
=========
It is used to move record pointer to next position from current position.

If next position is a record then it will return true.

If next position is ALR then it will return false.

To read the values from record ResultSet we need to getXxx(-) methods with index numbers or column names.


Types of Queries
================
According to JDBC point of view, we have two types of queries.

1) Select Query 

2) Non-Select Query 

1) Select Query 
--------------
Select query returns bunch of records from database table.
ex:
	select * from student;

A JDBC Statement object gave executeQuery() method to execute select query.
ex:
	ResultSet rs=st.executeQuery("select * from student");

2) Non-Select Query 
----------------
Non-select query returns numeric value represent number of records effected in a database table.
ex:
	delete from student;

A JDBC Statement object gave executeUpdate() method to execute non-select query.
ex:
	int result=st.executeUpdate("delete from student");

Steps to develop JDBC Application
=================================
We have six steps to develop JDBC application.

1) Register JDBC Driver with DriverManager service.

2) Establish the connection with database software.

3) Create Statement object. 

4) Sends and executes SQL query in database software.

5) Gather the result from database software to process the result.

6) Close all JDBC Connection objects.


Types of Drivers in JDBC
========================
We have four types of JDBC Drivers.

1) Type1 JDBC Driver / JDBC-ODBC Bridge driver 

2) Type2 JDBC Driver / Native API driver 

3) Type3 JDBC Driver / Net Protocol driver 

4) Type4 JDBC Driver / Native Protocol driver 


Q) What is JDBC?

It is a open technology given by Sun Micro System having set of rules and guidelines to develop JDBC drivers to interact with multiple database softwares.


Q) What is ODBC?

It is a open technology given by Xopen company having set of rules and guidelines to develop 
ODBC drivers to interact with multiple database softwares.



















































































