Q) How many Statement objects are there in JDBC?

We have three Statement objects in JDBC.

1) Simple Statement
-----------------
It is an object of underlying supplied java class which implements java.sql.Statement interface.
 

2) PreparedStatement 
--------------------
It is an object of underlying supplied java class which implements java.sql.PreparedStatement interface.


3) CallableStatement 
--------------------
It is an object of underlying supplied java class which implements java.sql.CallableStatement interface.


Q) Types of JDBC Connection objects?

We have two JDBC Connection objects.

1) Direct JDBC Connection object 
---------------------------------
A JDBC Connection object which is created by the user.
ex:
	Class.forName("oracle.jdbc.driver.OracleDriver");
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:
				@localhost:1521:XE","system","admin");

2) Pooled JDBC Connection object 
--------------------------------
A JDBC Connection object which is gathered from JDBC Connection pool.

Limitations with Simple Statement object
========================================
> It is not suitable to execute same query for multiple times with same values or different values.

> It raises SQL Injection problem.

> We can't use string values without any conversion in our application.

> Framing a query with variables is quit complex.

> It does not allow us to insert date values to database table column.

> It does not allow us to insert LOB values to database table column.

To overcome above limitations we need to use PreparedStatement object.


Pre-Compiled SQL Query
=======================
Our query goes to database software without input values and becomes parsed query.
Either it is execute or not is called pre-compiled SQL query.

PreparedStatement object deals with pre-compiled SQL query.


Working with PreparedStatement object
=====================================
step1:
-----
	Create a query with placeholders or parameters.
	ex:
		String qry="insert into student values(?,?,?)";

step2:
------
	Convert SQL query to pre-compiled SQL Query.
	ex:
		PreparedStatement ps=con.prepareStatement(qry);

step3:
-----
	Set the values to query parameter.
	ex:
		ps.setInt(1,no);
		ps.setString(2,name);
		ps.setString(3,add);
		

step4:
----
	Execute the pre-compiled SQL query.
	ex:
		ps.executeUpdate();

step5:
-----
	Close PreparedStatement object.
	ex:
		ps.close();

Q) Write a JDBC application to insert a record into student table using PreparedStatement object?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Scanner;

public class PSInsertApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no: ");
		int no=sc.nextInt();
		System.out.println("Enter the student name: ");
		String name=sc.next();
		System.out.println("Enter the student add :");
		String add=sc.next();
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
	
		String qry="insert into student values(?,?,?)";
		
		PreparedStatement ps=con.prepareStatement(qry);
		
		//set the values
		ps.setInt(1,no);
		ps.setString(2,name);
		ps.setString(3,add);
		
		//execute 
		int result=ps.executeUpdate();
		
		if(result==0)
			System.out.println("No Record Inserted");
		else
			System.out.println(result+" Record Inserted");
		
		ps.close();
		con.close();
	}
	

}

Q) Write a JDBC application to update student name based on student number?


package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Scanner;

public class PSUpdateApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no: ");
		int no=sc.nextInt();
		System.out.println("Enter the student new name: ");
		String name=sc.next();

		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
			
		String qry="update student set sname=? where sno=?";
		
		PreparedStatement ps=con.prepareStatement(qry);
		
		//set the values
		ps.setString(1,name);
		ps.setInt(2,no);
		
		//execute 
		int result=ps.executeUpdate();
		
		if(result==0)
			System.out.println("No Record Updated");
		else
			System.out.println(result+" Record Updated");
		
		ps.close();
		con.close();
		
	}
}


Q) Write a JDBC application to delete the student record based on student no?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Scanner;

public class PSDeleteApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no: ");
		int no=sc.nextInt();

		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
			
		String qry="delete from student where sno=?";
		
		PreparedStatement ps=con.prepareStatement(qry);
		
		//set the value
		ps.setInt(1,no);
		
		//execute 
		int result=ps.executeUpdate();
		if(result==0)
			System.out.println("No Record Deleted");
		else
			System.out.println(result+" Record Deleted");
		
		ps.close();
		con.close();
	}
}

Solution for SQL injection problem
================================
package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;

public class SolForSQLInjProbApp 
{
	public static void main(String[] args)throws Exception 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the username :");
		String user=sc.next();
		System.out.println("Enter the password :");
		String pass=sc.next();
	
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
				
		String qry="select count(*) from userlist where uname=? and pwd=?";
		
		PreparedStatement ps=con.prepareStatement(qry);
		
		//set the values
		ps.setString(1,user);
		ps.setString(2,pass);
		
		ResultSet rs=ps.executeQuery();
		
		int result=0;
		while(rs.next())
		{
			result=rs.getInt(1);
		}
		if(result==0)
			System.out.println("Invalid Credentials ");
		else
			System.out.println("Valid Credentials");
		
		rs.close();
		ps.close();
		con.close();
	}
}

Assignment
==========
Q) Write a JDBC application to create a student table?











































































	


















